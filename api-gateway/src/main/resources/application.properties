server.port=7000

spring.application.name=api-gateway

spring.cloud.gateway.routes[0].id=book-service
spring.cloud.gateway.routes[0].uri=lb://book-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/books/**

spring.cloud.gateway.routes[1].id=loan-service
spring.cloud.gateway.routes[1].uri=lb://loan-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/loans/**

spring.cloud.gateway.routes[2].id=user-service
spring.cloud.gateway.routes[2].uri=lb://user-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/users/**

# Mengaktifkan Discovery Locator untuk menemukan layanan secara otomatis dari Eureka
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Konfigurasi Eureka Server (gunakan service name di Kubernetes)
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/

# Pastikan Spring Boot berjalan dalam mode reactive
spring.main.web-application-type=reactive

# Prometheus Metrics Exposure
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
